#!/bin/bash     
#title          :chkdf2
#description    :Liest beim Start ein Konfigurationsfile ein, das jeweils einen 
#                Mountpunkt und einen Schwellenwert für den Füllungsgrad enthält. 
#                Format der Zeilen im Konfigurationsfile ist Mountpoint:Schwellenwert. 
#                Prüft dann in regelmässigen Zeitabständen mit df -k, ob der Schwellenwert 
#                für einen der Mountpunkte überschritten wurde und gibt in diesem Fall 
#                eine Meldung aus. Optionen: 
#                -f <Pfad zum Konfigurationsfile> 
#                -i <Intervall in Sekunden>
#                Defaultwerte: 
#                Ohne -f heisst das Konfigurationsfile chkdf.cfg und stehlt im aktuellen Verzeichnis
#                Ohne -i ist das Zeitintervall 5 Minuten = 300 Sekunden
#                Mit dem Schalter -h wird ein kurzer Hilfetext ausgegeben.
#author         :Jochen Reinholdt
#date           :20180823
#version        :1.0    
#usage          :chkdf2 [-f Konfigurationsfile] [-i Zeitintervall in sec. ]
#notes          :       
#bash_version   :4.4.12(1)-release
#============================================================================

config_file=chkdf.cfg
interval=0
declare -A config_array

usage() {
    echo "Benutzung: basename $0 [-f Konfigurationsfile] [-i Zeitintervall in sec. ]"
}

help() {
    echo ######################################################################
    usage
    echo Überprüfung ob der Füllungsgrad ausgewählter Dateisysteme einen
    echo Schwellenwert überschreitet. Die zu Überprüfung vorgesehenen 
    echo Dateisysteme  werden in einem Konfigurationsfile angegeben
    echo Das Konnfigurationsfile enthält Zeilen in der Form 
    echo "Mountpoint Schwellenwert in %". Beispiel:
    echo     / 80
    echo     /home 65
    echo     /var 75
    echo
    echo Wenn das Konfigurationsfile nicht mit -f angegeben wurde, wird 
    echo chkdf.cfg im aktuellen Verzeichnis gesucht. 
    echo Das Zeitintervall nach -i ist die Zeit in Sekunden, die verstreicht,
    echo bevor eine erneute Prüfung stattfindet. Wird kein Intervall angegeben
    echo wird die Prüfung nur einmal ausgeführt.
    echo ######################################################################
}

read_config_file() {
    # Prüfung, ob das Konfigurationsfile existiert und lesbar ist
    if [ -f $config_file ] && [ -r $config_file ]
    then
        # Einlesen der Konfigurationsdatei
        while read mount pct
        do
            config_array[$mount]=$pct
        done < $config_file
        return 0
    else
        echo Konfigurationsfile $config_file kann nicht gelesen werden
        usage
        return 1
    fi
}

while getopts f:i:h opt 2>/dev/null
do
    case $opt in
        f) config_file=$OPTARG 
           if ! [ -f $config_file ]
           then
               echo $config_file nicht gefunden
               usage
               exit 1 
           fi
           ;;
        i) interval=$OPTARG
           if ! [ $interval -eq $interval ] 2>/dev/null
           then
               echo $interval ist keine ganze Zahl
               usage
               exit 1 
           fi
           ;;
        h) help
           exit 0
           ;;
        ?) echo "$opt: Unbekannte Option" 
           usage
           ;;
    esac
done

read_config_file

# Die Prüfung läuft in einer Endlosschleife. Abbruch mit ^C oder kill PID
while true
do
    for mount in ${!config_array[@]}
    do
        pct_full=$(df --output=pcent $mount | tr -d '%' | tail -n+2)
        if [ $pct_full -ge ${config_array[$mount]} ]
        then 
            echo "Alarm: $mount ist zu $pct_full% voll"     
        fi
    done
    # Warten, bis die Zeit in $interval Sekunden abgelaufen ist
    sleep $interval

    if [ $interval -eq 0 ]
    then
        break
    fi
done

# Exit code 0 bei Erfolg
exit 0
